/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package plugin;

import com.coderedrobotics.dashboard.communications.DSMListener;
import com.coderedrobotics.dashboard.communications.DataStream;
import com.coderedrobotics.dashboard.communications.DataStreamingModule;
import java.awt.Color;

/**
 *
 * @author austin
 */
public class Graph extends javax.swing.JInternalFrame implements DSMListener{

    DataStream dataStream;

    /**
     * Creates new form Graph
     */
    public Graph() {
        initComponents();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setIconifiable(true);
    }

    public void init(DataStream stream) {
        graph1.addStream(stream, Color.RED, 0.5, 1, true);
        setTitle("Graph - " + stream.getName());
        this.dataStream = stream;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graph1 = new com.coderedrobotics.dashboard.api.gui.Graph();
        jLabel1 = new javax.swing.JLabel();
        centerField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        scaleField = new javax.swing.JTextField();
        value = new javax.swing.JLabel();

        javax.swing.GroupLayout graph1Layout = new javax.swing.GroupLayout(graph1);
        graph1.setLayout(graph1Layout);
        graph1Layout.setHorizontalGroup(
            graph1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        graph1Layout.setVerticalGroup(
            graph1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 243, Short.MAX_VALUE)
        );

        jLabel1.setText("Center");

        centerField.setText("0.5");
        centerField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                centerFieldKeyReleased(evt);
            }
        });

        jLabel2.setText("Scale");

        scaleField.setText("1");
        scaleField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                scaleFieldKeyReleased(evt);
            }
        });

        value.setText("<error 284>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(graph1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(centerField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scaleField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(value)
                .addGap(0, 26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(centerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(scaleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(value))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(graph1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void centerFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_centerFieldKeyReleased
        double center;
        double scale;
        try {
            center = Double.parseDouble(centerField.getText());
            scale = Double.parseDouble(scaleField.getText());
        } catch (NumberFormatException numberFormatException) {
            return;
        }

        String s = graph1.geStreams()[0];
        graph1.removeAllStreams();
        graph1.addStream(dataStream, Color.RED,
                center, 1/scale, true);
    }//GEN-LAST:event_centerFieldKeyReleased

    private void scaleFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_scaleFieldKeyReleased
        double center;
        double scale;
        try {
            center = Double.parseDouble(centerField.getText());
            scale = Double.parseDouble(scaleField.getText());
        } catch (NumberFormatException numberFormatException) {
            return;
        }

        String s = graph1.geStreams()[0];
        graph1.removeAllStreams();
        graph1.addStream(dataStream, Color.RED,
                center, 1/scale, true);
    }//GEN-LAST:event_scaleFieldKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField centerField;
    private com.coderedrobotics.dashboard.api.gui.Graph graph1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField scaleField;
    private javax.swing.JLabel value;
    // End of variables declaration//GEN-END:variables

    @Override
    public void alertToDSMUpdates() {
        value.setText("" + dataStream.getLastPacket().val);
    }

    @Override
    public void alertToNewStreams() {
    }
}
