package plugin;

import com.coderedrobotics.dashboard.communications.DSMListener;
import java.awt.Color;
import com.coderedrobotics.dashboard.communications.DataStream;
import com.coderedrobotics.dashboard.communications.DataStreamingModule;
import com.coderedrobotics.dashboard.communications.SynchronizedRegisterArray;
import javax.swing.JTextArea;

/**
 *
 * @author Austin
 */
public class PWMandDIO extends javax.swing.JPanel implements DSMListener {

    DataStreamingModule dataStreamingModule;
    SynchronizedRegisterArray synchronizedRegisterArray;

    /**
     * Creates new form PWMandDIO
     */
    public PWMandDIO() {
        initComponents();
    }

    public void init(DataStreamingModule dataStreamingModule,
            SynchronizedRegisterArray synchronizedRegisterArray) {
        this.dataStreamingModule = dataStreamingModule;
        this.synchronizedRegisterArray = synchronizedRegisterArray;
        dataStreamingModule.addDSMListener(this);
    }

    @Override
    public void alertToNewStreams() {
    }
    
    @Override
    public void alertToDSMUpdates() {
        if (dataStreamingModule != null) {
            for (int i = 0; i < 10; i++) {
                DataStream dataStream =
                        dataStreamingModule.getStream("PWM" + i);
                if (dataStream != null) {
                    iOpanel1.setPWM(i, (dataStream.getLastPacket().val - 128) / 128);
                }
            }
            for (int i = 0; i < 14; i++) {
                DataStream dataStreamD =
                        dataStreamingModule.getStream("DIOD" + i);
                DataStream dataStreamS =
                        dataStreamingModule.getStream("DIOS" + i);
                if (dataStreamD != null && dataStreamS != null) {
                    iOpanel1.setDIO(i,
                            dataStreamD.getLastPacket().val == 1,
                            dataStreamS.getLastPacket().val == 1);
                }
            }
            for (int i = 0; i < 8; i++) {
                DataStream dataStreamF =
                        dataStreamingModule.getStream("RelayF" + i);
                DataStream dataStreamR =
                        dataStreamingModule.getStream("RelayR" + i);
                if (dataStreamF != null && dataStreamR != null) {
                    iOpanel1.setRelay(i,
                            dataStreamF.getLastPacket().val == 1,
                            dataStreamR.getLastPacket().val == 1);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graph1 = new com.coderedrobotics.dashboard.api.gui.Graph();
        iOpanel1 = new plugin.IOpanel();
        jComboBox1 = new javax.swing.JComboBox();

        graph1.setPreferredSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout graph1Layout = new javax.swing.GroupLayout(graph1);
        graph1.setLayout(graph1Layout);
        graph1Layout.setHorizontalGroup(
            graph1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );
        graph1Layout.setVerticalGroup(
            graph1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        iOpanel1.setMinimumSize(new java.awt.Dimension(0, 0));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PWM1", "PWM2", "PWM3", "PWM4", "PWM5", "PWM6", "PWM7", "PWM8", "PWM9", "PWM10", "DIO1-7", "DIO8-14", "Relays" }));
        jComboBox1.setMinimumSize(new java.awt.Dimension(0, 28));
        jComboBox1.setPreferredSize(new java.awt.Dimension(0, 28));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graph1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, 378, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(iOpanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iOpanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(graph1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        int selection = jComboBox1.getSelectedIndex();
        if (dataStreamingModule != null) {
            if (selection > -1 && selection < 10) {
                graph1.removeAllStreams();
                if (dataStreamingModule.getStream(
                    "PWM" + selection) != null) {
                    graph1.addStream(
                            dataStreamingModule.getStream("PWM" + selection),
                            Color.GREEN, 0.5, 0.5, false);
                }
                return;
            }
            if (selection == 10) {//DIO 0-6
                graph1.removeAllStreams();
                double scale = 1d / 21d;
                DataStream ds;
                for (int i = 0; i < 7; i++) {
                    ds = dataStreamingModule.getStream("DIOS" + i);
                    if (ds != null) {
                        graph1.addStream(
                                ds, Color.ORANGE, scale + (scale * 3 * i),
                                scale, true);
                    }
                }
                return;
            }
            if (selection == 11) {//DIO 7-13
                graph1.removeAllStreams();
                double scale = 1d / 21d;
                DataStream ds;
                for (int i = 0; i < 7; i++) {
                    ds = dataStreamingModule.getStream("DIOS" + (i + 7));
                    if (ds != null) {
                        graph1.addStream(
                                ds, Color.ORANGE, scale + (scale * 3 * i),
                                scale, true);
                    }
                }
                return;
            }
            if (selection == 12) {//Relays 0-7
                graph1.removeAllStreams();
                double scale = 1d / 36d;
                DataStream dsr, dsf;
                for (int i = 0; i < 8; i++) {
                    dsr = dataStreamingModule.getStream("RelayR" + i);
                    dsf = dataStreamingModule.getStream("RelayF" + i);
                    if (dsr != null && dsf != null) {
                        graph1.addStream(
                                dsr, Color.RED, scale + (scale * 4 * i),
                                -scale, true);
                        graph1.addStream(
                                dsf, Color.GREEN, (scale * 2) + (scale * 4 * i),
                                scale, true);
                    }
                }
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.coderedrobotics.dashboard.api.gui.Graph graph1;
    private plugin.IOpanel iOpanel1;
    private javax.swing.JComboBox jComboBox1;
    // End of variables declaration//GEN-END:variables
}
